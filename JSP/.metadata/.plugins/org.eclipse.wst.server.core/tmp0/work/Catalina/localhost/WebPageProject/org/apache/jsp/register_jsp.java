/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.27
 * Generated at: 2018-02-18 08:57:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.io.*;
import db.DBConnection;

public final class register_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("db.DBConnection");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=EUC-KR\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"./css/mystyle.css\"/>\r\n");
      out.write("</head>\r\n");
      out.write("<body onload=\"idFunc()\">\r\n");
      out.write("\t\r\n");
      out.write("\t<script language=javascript>\r\n");
      out.write("\t    function subFunc1(){\r\n");
      out.write("\t    \tvar element=document.getElementById(\"id\").value;\r\n");
      out.write("\t    \tdocument.register.action=\"./idCheckForm.jsp\";\r\n");
      out.write("\t    \tdocument.register.method=\"post\";\r\n");
      out.write("\t    \tdocument.register.submit();\r\n");
      out.write("\t    }\r\n");
      out.write("\t    function subFunc2(){\r\n");
      out.write("\t    \t//비밀번호 같은지 확인하는 이벤트\r\n");
      out.write("\t    \tvar password=document.getElementById(\"password\").value;\r\n");
      out.write("\t    \tvar passwordcheck=document.getElementById(\"passwordcheck\").value;\r\n");
      out.write("\t    \tif(password==passwordcheck){\r\n");
      out.write("\t    \t\tdocument.register.action=\"./register_complete.jsp\";\r\n");
      out.write("\t\t    \tdocument.register.method=\"post\";\r\n");
      out.write("\t\t    \tdocument.register.submit();\r\n");
      out.write("\t    \t}\r\n");
      out.write("\t    \telse{\r\n");
      out.write("\t    \t\talert(\"패스워드 확인 란에 패스워드를 다시 입력하여 주세요.\");\r\n");
      out.write("\t    \t}\r\n");
      out.write("\t    }\r\n");
      out.write("\t    function idFunc(){\r\n");
      out.write("\t    \tvar str=\"");
      out.print(session.getAttribute("idCheck"));
      out.write("\";\r\n");
      out.write("\t    \tif(str==\"null\"){\r\n");
      out.write("\t    \t\tdocument.getElementById(\"id\").value=\"\";\r\n");
      out.write("\t    \t}\r\n");
      out.write("\t    \telse if(str==\"fail\"){\r\n");
      out.write("\t    \t\talert(\"id가 중복됩니다!\");\r\n");
      out.write("\t    \t\tdocument.getElementById(\"id\").value=\"\";\r\n");
      out.write("\t    \t}\r\n");
      out.write("\t    \telse{\r\n");
      out.write("\t    \t\talert(\"사용할 수 있는 id입니다.\");\r\n");
      out.write("\t    \t\tdocument.getElementById(\"id\").value=str;\r\n");
      out.write("\t    \t}\r\n");
      out.write("\t    }\r\n");
      out.write("\t</script>\r\n");
      out.write("\t<div id=\"page-wrap\">\r\n");
      out.write("\t\t<form name=\"register\" id=\"register\">\r\n");
      out.write("\t\t\t<fieldset>\r\n");
      out.write("\t\t\t\t<legend>회원정보입력</legend>\r\n");
      out.write("\t\t\t\t<table>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td><label for=\"name\">아이디</label></td>\r\n");
      out.write("\t\t\t\t\t\t");

							if(session.getAttribute("idCheck")=="fail"){
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t<td><input type=\"text\" value=\"\" name=\"id\" id=\"id\"></td>\r\n");
      out.write("\t\t\t\t\t\t");
 
								session.invalidate();
						}
							else{
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t<td><input type=\"text\" name=\"id\" id=\"id\"></td>\r\n");
      out.write("\t\t\t\t\t\t");
 
								session.invalidate();
						}
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<td><input type=\"button\" value=\"중복확인\" onclick=\"subFunc1()\"></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td><label for=\"password1\">패스워드</label></td>\r\n");
      out.write("\t\t\t\t\t\t<td><input type=\"password\" name=\"password\" id=\"password\"></td>\r\n");
      out.write("\t\t\t\t\t\t<td></td>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td><label for=\"password2\">패스워드 확인</label></td>\r\n");
      out.write("\t\t\t\t\t\t<td><input type=\"password\" name=\"passwordcheck\" id=\"passwordcheck\"></td>\r\n");
      out.write("\t\t\t\t\t\t<td></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td><label for=\"name\">이름</label></td>\r\n");
      out.write("\t\t\t\t\t\t<td><input type=\"text\" name=\"name\"/></td>\r\n");
      out.write("\t\t\t\t\t\t<td></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td><label for=\"tel\">휴대폰 번호</label></td>\r\n");
      out.write("\t\t\t\t\t\t<td><input type=\"tel\" name=\"tel\"/></td>\r\n");
      out.write("\t\t\t\t\t\t<td></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td><label for=\"email\">이메일</label></td>\r\n");
      out.write("\t\t\t\t\t\t<td><input type=\"email\" name=\"email\"/></td>\r\n");
      out.write("\t\t\t\t\t\t<td></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td><label for=\"dob\">생일</label></td>\r\n");
      out.write("\t\t\t\t\t\t<td><input type=\"number\" name=\"birthday\"/></td>\r\n");
      out.write("\t\t\t\t\t\t<td></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td><input type=\"radio\" name=\"gender\" value=\"Male\">남성\r\n");
      out.write("\t\t\t\t\t\t<input type=\"radio\" name=\"gender\" value=\"Female\">여성</td>\r\n");
      out.write("\t\t\t\t\t\t<td></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t</table>\r\n");
      out.write("\t\t\t</fieldset>\r\n");
      out.write("\t\t\t<input type=\"button\" value=\"제출\" onclick=\"subFunc2()\"/>\r\n");
      out.write("\t\t\t<input type=\"reset\" value=\"초기화\"/>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
